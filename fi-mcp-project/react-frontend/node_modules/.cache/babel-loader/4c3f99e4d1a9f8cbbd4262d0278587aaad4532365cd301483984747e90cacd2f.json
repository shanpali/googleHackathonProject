{"ast":null,"code":"var _jsxFileName = \"/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/AssetAllocation.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\n// Softer pastel color palette\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#90caf9', '#a5d6a7', '#ffe082', '#ffab91', '#ce93d8', '#80cbc4', '#fff59d', '#b0bec5'];\nexport default function AssetAllocation({\n  data\n}) {\n  var _data$fetch_net_worth, _data$fetch_net_worth2, _data$fetch_net_worth3;\n  // Use real allocation breakdown if available\n  const allocation = ((_data$fetch_net_worth = data.fetch_net_worth) === null || _data$fetch_net_worth === void 0 ? void 0 : (_data$fetch_net_worth2 = _data$fetch_net_worth.netWorthResponse) === null || _data$fetch_net_worth2 === void 0 ? void 0 : (_data$fetch_net_worth3 = _data$fetch_net_worth2.assetValues) === null || _data$fetch_net_worth3 === void 0 ? void 0 : _data$fetch_net_worth3.map(a => {\n    var _a$value;\n    return {\n      label: a.netWorthAttribute.replace('ASSET_TYPE_', '').replace('_', ' '),\n      value: parseFloat((_a$value = a.value) === null || _a$value === void 0 ? void 0 : _a$value.units) || 0\n    };\n  })) || [];\n\n  // Calculate total for percentage breakdown\n  const total = allocation.reduce((sum, a) => sum + a.value, 0) || 1;\n  // For the table, add percent as integer; for the pie, use raw value\n  const allocationWithPercent = allocation.map((a, idx) => ({\n    ...a,\n    percent: Math.round(a.value / total * 100),\n    // for table only\n    color: COLORS[idx % COLORS.length]\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      borderRadius: 3,\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: 700,\n          children: \"Asset Allocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Last 12 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            mb: 1,\n            children: \"Allocation Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            sx: {\n              borderRadius: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 700\n                    },\n                    children: \"Asset Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    sx: {\n                      fontWeight: 700\n                    },\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    sx: {\n                      fontWeight: 700\n                    },\n                    children: \"Percent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: allocationWithPercent.length > 0 ? allocationWithPercent.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: item.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"\\u20B9\", item.value.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    sx: {\n                      fontWeight: 700\n                    },\n                    children: [item.percent, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 23\n                  }, this)]\n                }, item.label, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 3,\n                    children: \"No data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            mt: 2,\n            children: [\"Risk Profile: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Moderate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 85\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n            pr: {\n              md: 10,\n              xs: 0\n            }\n          },\n          children: allocationWithPercent.length > 0 && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: 600,\n            height: 340,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: /*#__PURE__*/_jsxDEV(Pie, {\n                data: allocationWithPercent,\n                dataKey: \"value\",\n                nameKey: \"label\",\n                cx: \"50%\",\n                cy: \"50%\",\n                innerRadius: 70,\n                outerRadius: 120,\n                fill: \"#90caf9\",\n                label: ({\n                  value,\n                  percent\n                }) => `${Math.round(percent * 100)}%`,\n                labelLine: false,\n                paddingAngle: 2,\n                children: allocationWithPercent.map((entry, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: entry.color\n                }, `cell-${idx}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = AssetAllocation;\nvar _c;\n$RefreshReg$(_c, \"AssetAllocation\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","PieChart","Pie","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","AssetAllocation","data","_data$fetch_net_worth","_data$fetch_net_worth2","_data$fetch_net_worth3","allocation","fetch_net_worth","netWorthResponse","assetValues","map","a","_a$value","label","netWorthAttribute","replace","value","parseFloat","units","total","reduce","sum","allocationWithPercent","idx","percent","Math","round","color","length","sx","borderRadius","mb","children","display","justifyContent","alignItems","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","component","elevation","size","align","toLocaleString","colSpan","mt","pr","width","height","dataKey","nameKey","cx","cy","innerRadius","outerRadius","fill","labelLine","paddingAngle","entry","_c","$RefreshReg$"],"sources":["/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/AssetAllocation.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\n// Softer pastel color palette\nconst COLORS = ['#90caf9', '#a5d6a7', '#ffe082', '#ffab91', '#ce93d8', '#80cbc4', '#fff59d', '#b0bec5'];\n\nexport default function AssetAllocation({ data }) {\n  // Use real allocation breakdown if available\n  const allocation = data.fetch_net_worth?.netWorthResponse?.assetValues?.map(a => ({\n    label: a.netWorthAttribute.replace('ASSET_TYPE_', '').replace('_', ' '),\n    value: parseFloat(a.value?.units) || 0\n  })) || [];\n\n  // Calculate total for percentage breakdown\n  const total = allocation.reduce((sum, a) => sum + a.value, 0) || 1;\n  // For the table, add percent as integer; for the pie, use raw value\n  const allocationWithPercent = allocation.map((a, idx) => ({\n    ...a,\n    percent: Math.round((a.value / total) * 100), // for table only\n    color: COLORS[idx % COLORS.length]\n  }));\n\n  return (\n    <Card sx={{ borderRadius: 3, mb: 3 }}>\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" fontWeight={700}>Asset Allocation</Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">Last 12 months</Typography>\n        </Box>\n        <Grid container spacing={2} alignItems=\"center\">\n          {/* Table on the left (narrower) */}\n          <Grid item xs={12} md={4}>\n            <Typography variant=\"subtitle2\" mb={1}>Allocation Breakdown</Typography>\n            <TableContainer component={Paper} elevation={0} sx={{ borderRadius: 2 }}>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ fontWeight: 700 }}>Asset Type</TableCell>\n                    <TableCell align=\"right\" sx={{ fontWeight: 700 }}>Amount</TableCell>\n                    <TableCell align=\"right\" sx={{ fontWeight: 700 }}>Percent</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {allocationWithPercent.length > 0 ? allocationWithPercent.map((item) => (\n                    <TableRow key={item.label}>\n                      <TableCell>{item.label}</TableCell>\n                      <TableCell align=\"right\">₹{item.value.toLocaleString()}</TableCell>\n                      <TableCell align=\"right\" sx={{ fontWeight: 700 }}>{item.percent}%</TableCell>\n                    </TableRow>\n                  )) : (\n                    <TableRow><TableCell colSpan={3}>No data</TableCell></TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <Typography variant=\"body2\" color=\"text.secondary\" mt={2}>Risk Profile: <b>Moderate</b></Typography>\n          </Grid>\n          {/* Pie chart on the right (wider) */}\n          <Grid item xs={12} md={8} sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', pr: { md: 10, xs: 0 } }}>\n            {allocationWithPercent.length > 0 && (\n              <ResponsiveContainer width={600} height={340}>\n                <PieChart>\n                  <Pie\n                    data={allocationWithPercent}\n                    dataKey=\"value\"\n                    nameKey=\"label\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={70}\n                    outerRadius={120}\n                    fill=\"#90caf9\"\n                    label={({ value, percent }) => `${Math.round(percent * 100)}%`}\n                    labelLine={false}\n                    paddingAngle={2}\n                  >\n                    {allocationWithPercent.map((entry, idx) => (\n                      <Cell key={`cell-${idx}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                </PieChart>\n              </ResponsiveContainer>\n            )}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AACjJ,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,mBAAmB,QAAQ,UAAU;;AAEnE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAEvG,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAChD;EACA,MAAMC,UAAU,GAAG,EAAAH,qBAAA,GAAAD,IAAI,CAACK,eAAe,cAAAJ,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBK,gBAAgB,cAAAJ,sBAAA,wBAAAC,sBAAA,GAAtCD,sBAAA,CAAwCK,WAAW,cAAAJ,sBAAA,uBAAnDA,sBAAA,CAAqDK,GAAG,CAACC,CAAC;IAAA,IAAAC,QAAA;IAAA,OAAK;MAChFC,KAAK,EAAEF,CAAC,CAACG,iBAAiB,CAACC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MACvEC,KAAK,EAAEC,UAAU,EAAAL,QAAA,GAACD,CAAC,CAACK,KAAK,cAAAJ,QAAA,uBAAPA,QAAA,CAASM,KAAK,CAAC,IAAI;IACvC,CAAC;EAAA,CAAC,CAAC,KAAI,EAAE;;EAET;EACA,MAAMC,KAAK,GAAGb,UAAU,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEV,CAAC,KAAKU,GAAG,GAAGV,CAAC,CAACK,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC;EAClE;EACA,MAAMM,qBAAqB,GAAGhB,UAAU,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEY,GAAG,MAAM;IACxD,GAAGZ,CAAC;IACJa,OAAO,EAAEC,IAAI,CAACC,KAAK,CAAEf,CAAC,CAACK,KAAK,GAAGG,KAAK,GAAI,GAAG,CAAC;IAAE;IAC9CQ,KAAK,EAAE3B,MAAM,CAACuB,GAAG,GAAGvB,MAAM,CAAC4B,MAAM;EACnC,CAAC,CAAC,CAAC;EAEH,oBACE7B,OAAA,CAACjB,IAAI;IAAC+C,EAAE,EAAE;MAAEC,YAAY,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eACnCjC,OAAA,CAAChB,WAAW;MAAAiD,QAAA,gBACVjC,OAAA,CAACd,GAAG;QAAC4C,EAAE,EAAE;UAAEI,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE,QAAQ;UAAEJ,EAAE,EAAE;QAAE,CAAE;QAAAC,QAAA,gBACzFjC,OAAA,CAACf,UAAU;UAACoD,OAAO,EAAC,IAAI;UAACC,UAAU,EAAE,GAAI;UAAAL,QAAA,EAAC;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvE1C,OAAA,CAACf,UAAU;UAACoD,OAAO,EAAC,OAAO;UAACT,KAAK,EAAC,gBAAgB;UAAAK,QAAA,EAAC;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACN1C,OAAA,CAACb,IAAI;QAACwD,SAAS;QAACC,OAAO,EAAE,CAAE;QAACR,UAAU,EAAC,QAAQ;QAAAH,QAAA,gBAE7CjC,OAAA,CAACb,IAAI;UAAC0D,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAd,QAAA,gBACvBjC,OAAA,CAACf,UAAU;YAACoD,OAAO,EAAC,WAAW;YAACL,EAAE,EAAE,CAAE;YAAAC,QAAA,EAAC;UAAoB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxE1C,OAAA,CAACT,cAAc;YAACyD,SAAS,EAAEtD,KAAM;YAACuD,SAAS,EAAE,CAAE;YAACnB,EAAE,EAAE;cAAEC,YAAY,EAAE;YAAE,CAAE;YAAAE,QAAA,eACtEjC,OAAA,CAACZ,KAAK;cAAC8D,IAAI,EAAC,OAAO;cAAAjB,QAAA,gBACjBjC,OAAA,CAACR,SAAS;gBAAAyC,QAAA,eACRjC,OAAA,CAACP,QAAQ;kBAAAwC,QAAA,gBACPjC,OAAA,CAACV,SAAS;oBAACwC,EAAE,EAAE;sBAAEQ,UAAU,EAAE;oBAAI,CAAE;oBAAAL,QAAA,EAAC;kBAAU;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC,eAC1D1C,OAAA,CAACV,SAAS;oBAAC6D,KAAK,EAAC,OAAO;oBAACrB,EAAE,EAAE;sBAAEQ,UAAU,EAAE;oBAAI,CAAE;oBAAAL,QAAA,EAAC;kBAAM;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC,eACpE1C,OAAA,CAACV,SAAS;oBAAC6D,KAAK,EAAC,OAAO;oBAACrB,EAAE,EAAE;sBAAEQ,UAAU,EAAE;oBAAI,CAAE;oBAAAL,QAAA,EAAC;kBAAO;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACZ1C,OAAA,CAACX,SAAS;gBAAA4C,QAAA,EACPV,qBAAqB,CAACM,MAAM,GAAG,CAAC,GAAGN,qBAAqB,CAACZ,GAAG,CAAEkC,IAAI,iBACjE7C,OAAA,CAACP,QAAQ;kBAAAwC,QAAA,gBACPjC,OAAA,CAACV,SAAS;oBAAA2C,QAAA,EAAEY,IAAI,CAAC/B;kBAAK;oBAAAyB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACnC1C,OAAA,CAACV,SAAS;oBAAC6D,KAAK,EAAC,OAAO;oBAAAlB,QAAA,GAAC,QAAC,EAACY,IAAI,CAAC5B,KAAK,CAACmC,cAAc,CAAC,CAAC;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACnE1C,OAAA,CAACV,SAAS;oBAAC6D,KAAK,EAAC,OAAO;oBAACrB,EAAE,EAAE;sBAAEQ,UAAU,EAAE;oBAAI,CAAE;oBAAAL,QAAA,GAAEY,IAAI,CAACpB,OAAO,EAAC,GAAC;kBAAA;oBAAAc,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC;gBAAA,GAHhEG,IAAI,CAAC/B,KAAK;kBAAAyB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAIf,CACX,CAAC,gBACA1C,OAAA,CAACP,QAAQ;kBAAAwC,QAAA,eAACjC,OAAA,CAACV,SAAS;oBAAC+D,OAAO,EAAE,CAAE;oBAAApB,QAAA,EAAC;kBAAO;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU;cAC/D;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACjB1C,OAAA,CAACf,UAAU;YAACoD,OAAO,EAAC,OAAO;YAACT,KAAK,EAAC,gBAAgB;YAAC0B,EAAE,EAAE,CAAE;YAAArB,QAAA,GAAC,gBAAc,eAAAjC,OAAA;cAAAiC,QAAA,EAAG;YAAQ;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChG,CAAC,eAEP1C,OAAA,CAACb,IAAI;UAAC0D,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACjB,EAAE,EAAE;YAAEI,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,UAAU;YAAEC,UAAU,EAAE,QAAQ;YAAEmB,EAAE,EAAE;cAAER,EAAE,EAAE,EAAE;cAAED,EAAE,EAAE;YAAE;UAAE,CAAE;UAAAb,QAAA,EACxHV,qBAAqB,CAACM,MAAM,GAAG,CAAC,iBAC/B7B,OAAA,CAACF,mBAAmB;YAAC0D,KAAK,EAAE,GAAI;YAACC,MAAM,EAAE,GAAI;YAAAxB,QAAA,eAC3CjC,OAAA,CAACL,QAAQ;cAAAsC,QAAA,eACPjC,OAAA,CAACJ,GAAG;gBACFO,IAAI,EAAEoB,qBAAsB;gBAC5BmC,OAAO,EAAC,OAAO;gBACfC,OAAO,EAAC,OAAO;gBACfC,EAAE,EAAC,KAAK;gBACRC,EAAE,EAAC,KAAK;gBACRC,WAAW,EAAE,EAAG;gBAChBC,WAAW,EAAE,GAAI;gBACjBC,IAAI,EAAC,SAAS;gBACdlD,KAAK,EAAEA,CAAC;kBAAEG,KAAK;kBAAEQ;gBAAQ,CAAC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,GAAG,CAAC,GAAI;gBAC/DwC,SAAS,EAAE,KAAM;gBACjBC,YAAY,EAAE,CAAE;gBAAAjC,QAAA,EAEfV,qBAAqB,CAACZ,GAAG,CAAC,CAACwD,KAAK,EAAE3C,GAAG,kBACpCxB,OAAA,CAACH,IAAI;kBAAqBmE,IAAI,EAAEG,KAAK,CAACvC;gBAAM,GAAjC,QAAQJ,GAAG,EAAE;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAsB,CAC/C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ;QACtB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAAC0B,EAAA,GAjFuBlE,eAAe;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}