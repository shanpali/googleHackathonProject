{"ast":null,"code":"var _jsxFileName = \"/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/AssetAllocation.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssetAllocation({\n  data\n}) {\n  var _data$fetch_net_worth;\n  // Example: build chart data from net worth history (replace with real data as available)\n  const history = ((_data$fetch_net_worth = data.fetch_net_worth) === null || _data$fetch_net_worth === void 0 ? void 0 : _data$fetch_net_worth.history) || [{\n    date: 'Jan',\n    value: 100\n  }, {\n    date: 'Feb',\n    value: 120\n  }, {\n    date: 'Mar',\n    value: 130\n  }, {\n    date: 'Apr',\n    value: 140\n  }];\n\n  // Example: allocation breakdown (replace with real data as available)\n  const allocation = [{\n    label: 'Equity',\n    value: 42\n  }, {\n    label: 'Debt',\n    value: 28\n  }, {\n    label: 'Real Estate',\n    value: 15\n  }, {\n    label: 'Gold',\n    value: 8\n  }, {\n    label: 'Cash',\n    value: 7\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      borderRadius: 3,\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: 700,\n          children: \"Asset Allocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Last 12 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: history,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"value\",\n                stroke: \"#1976d2\",\n                name: \"Total Portfolio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            mb: 1,\n            children: \"Allocation Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: allocation.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                py: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: 700,\n                children: [item.value, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, item.label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            mt: 2,\n            children: [\"Risk Profile: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Moderate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 85\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = AssetAllocation;\nvar _c;\n$RefreshReg$(_c, \"AssetAllocation\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Grid","List","ListItem","ListItemText","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","AssetAllocation","data","_data$fetch_net_worth","history","fetch_net_worth","date","value","allocation","label","sx","borderRadius","mb","children","display","justifyContent","alignItems","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","mt","item","xs","md","width","height","dataKey","type","stroke","name","dense","map","py","primary","_c","$RefreshReg$"],"sources":["/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/AssetAllocation.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nexport default function AssetAllocation({ data }) {\n  // Example: build chart data from net worth history (replace with real data as available)\n  const history = data.fetch_net_worth?.history || [\n    { date: 'Jan', value: 100 },\n    { date: 'Feb', value: 120 },\n    { date: 'Mar', value: 130 },\n    { date: 'Apr', value: 140 },\n  ];\n\n  // Example: allocation breakdown (replace with real data as available)\n  const allocation = [\n    { label: 'Equity', value: 42 },\n    { label: 'Debt', value: 28 },\n    { label: 'Real Estate', value: 15 },\n    { label: 'Gold', value: 8 },\n    { label: 'Cash', value: 7 },\n  ];\n\n  return (\n    <Card sx={{ borderRadius: 3, mb: 3 }}>\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\" fontWeight={700}>Asset Allocation</Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">Last 12 months</Typography>\n        </Box>\n        <Grid container spacing={2} mt={1}>\n          <Grid item xs={12} md={8}>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <LineChart data={history}>\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#1976d2\" name=\"Total Portfolio\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Typography variant=\"subtitle2\" mb={1}>Allocation Breakdown</Typography>\n            <List dense>\n              {allocation.map((item) => (\n                <ListItem key={item.label} sx={{ py: 0 }}>\n                  <ListItemText primary={item.label} />\n                  <Typography fontWeight={700}>{item.value}%</Typography>\n                </ListItem>\n              ))}\n            </List>\n            <Typography variant=\"body2\" color=\"text.secondary\" mt={2}>Risk Profile: <b>Moderate</b></Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AACtG,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAA,IAAAC,qBAAA;EAChD;EACA,MAAMC,OAAO,GAAG,EAAAD,qBAAA,GAAAD,IAAI,CAACG,eAAe,cAAAF,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAI,CAC/C;IAAEE,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC3B;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC3B;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC3B;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC5B;;EAED;EACA,MAAMC,UAAU,GAAG,CACjB;IAAEC,KAAK,EAAE,QAAQ;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC9B;IAAEE,KAAK,EAAE,MAAM;IAAEF,KAAK,EAAE;EAAG,CAAC,EAC5B;IAAEE,KAAK,EAAE,aAAa;IAAEF,KAAK,EAAE;EAAG,CAAC,EACnC;IAAEE,KAAK,EAAE,MAAM;IAAEF,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAEE,KAAK,EAAE,MAAM;IAAEF,KAAK,EAAE;EAAE,CAAC,CAC5B;EAED,oBACEP,OAAA,CAAChB,IAAI;IAAC0B,EAAE,EAAE;MAAEC,YAAY,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eACnCb,OAAA,CAACf,WAAW;MAAA4B,QAAA,gBACVb,OAAA,CAACb,GAAG;QAACuB,EAAE,EAAE;UAAEI,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAH,QAAA,gBAClFb,OAAA,CAACd,UAAU;UAAC+B,OAAO,EAAC,IAAI;UAACC,UAAU,EAAE,GAAI;UAAAL,QAAA,EAAC;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvEtB,OAAA,CAACd,UAAU;UAAC+B,OAAO,EAAC,OAAO;UAACM,KAAK,EAAC,gBAAgB;UAAAV,QAAA,EAAC;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACNtB,OAAA,CAACZ,IAAI;QAACoC,SAAS;QAACC,OAAO,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,gBAChCb,OAAA,CAACZ,IAAI;UAACuC,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAhB,QAAA,eACvBb,OAAA,CAACF,mBAAmB;YAACgC,KAAK,EAAC,MAAM;YAACC,MAAM,EAAE,GAAI;YAAAlB,QAAA,eAC5Cb,OAAA,CAACR,SAAS;cAACU,IAAI,EAAEE,OAAQ;cAAAS,QAAA,gBACvBb,OAAA,CAACN,KAAK;gBAACsC,OAAO,EAAC;cAAM;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxBtB,OAAA,CAACL,KAAK;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACTtB,OAAA,CAACJ,OAAO;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACXtB,OAAA,CAACH,MAAM;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACVtB,OAAA,CAACP,IAAI;gBAACwC,IAAI,EAAC,UAAU;gBAACD,OAAO,EAAC,OAAO;gBAACE,MAAM,EAAC,SAAS;gBAACC,IAAI,EAAC;cAAiB;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACPtB,OAAA,CAACZ,IAAI;UAACuC,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAhB,QAAA,gBACvBb,OAAA,CAACd,UAAU;YAAC+B,OAAO,EAAC,WAAW;YAACL,EAAE,EAAE,CAAE;YAAAC,QAAA,EAAC;UAAoB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACxEtB,OAAA,CAACX,IAAI;YAAC+C,KAAK;YAAAvB,QAAA,EACRL,UAAU,CAAC6B,GAAG,CAAEV,IAAI,iBACnB3B,OAAA,CAACV,QAAQ;cAAkBoB,EAAE,EAAE;gBAAE4B,EAAE,EAAE;cAAE,CAAE;cAAAzB,QAAA,gBACvCb,OAAA,CAACT,YAAY;gBAACgD,OAAO,EAAEZ,IAAI,CAAClB;cAAM;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrCtB,OAAA,CAACd,UAAU;gBAACgC,UAAU,EAAE,GAAI;gBAAAL,QAAA,GAAEc,IAAI,CAACpB,KAAK,EAAC,GAAC;cAAA;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA,GAF1CK,IAAI,CAAClB,KAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGf,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACPtB,OAAA,CAACd,UAAU;YAAC+B,OAAO,EAAC,OAAO;YAACM,KAAK,EAAC,gBAAgB;YAACG,EAAE,EAAE,CAAE;YAAAb,QAAA,GAAC,gBAAc,eAAAb,OAAA;cAAAa,QAAA,EAAG;YAAQ;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX;AAACkB,EAAA,GArDuBvC,eAAe;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}