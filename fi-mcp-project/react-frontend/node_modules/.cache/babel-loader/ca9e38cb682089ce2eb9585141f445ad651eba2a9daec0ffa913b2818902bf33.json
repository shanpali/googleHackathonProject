{"ast":null,"code":"var _jsxFileName = \"/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/AssetAllocation.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssetAllocation({\n  data\n}) {\n  var _data$fetch_net_worth, _data$fetch_net_worth2, _data$fetch_net_worth3, _data$fetch_net_worth4;\n  // Use real net worth history if available\n  const history = ((_data$fetch_net_worth = data.fetch_net_worth) === null || _data$fetch_net_worth === void 0 ? void 0 : _data$fetch_net_worth.history) || [];\n\n  // Use real allocation breakdown if available\n  const allocation = ((_data$fetch_net_worth2 = data.fetch_net_worth) === null || _data$fetch_net_worth2 === void 0 ? void 0 : (_data$fetch_net_worth3 = _data$fetch_net_worth2.netWorthResponse) === null || _data$fetch_net_worth3 === void 0 ? void 0 : (_data$fetch_net_worth4 = _data$fetch_net_worth3.assetValues) === null || _data$fetch_net_worth4 === void 0 ? void 0 : _data$fetch_net_worth4.map(a => {\n    var _a$value;\n    return {\n      label: a.netWorthAttribute.replace('ASSET_TYPE_', '').replace('_', ' '),\n      value: parseFloat((_a$value = a.value) === null || _a$value === void 0 ? void 0 : _a$value.units) || 0\n    };\n  })) || [];\n\n  // Calculate total for percentage breakdown\n  const total = allocation.reduce((sum, a) => sum + a.value, 0) || 1;\n  const allocationWithPercent = allocation.map(a => ({\n    ...a,\n    percent: Math.round(a.value / total * 100)\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      borderRadius: 3,\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: 700,\n          children: \"Asset Allocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Last 12 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        columns: 12,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            gridColumn: {\n              xs: 'span 12',\n              md: 'span 8'\n            },\n            display: 'flex'\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: history,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"value\",\n                stroke: \"#1976d2\",\n                name: \"Total Portfolio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            gridColumn: {\n              xs: 'span 12',\n              md: 'span 4'\n            },\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            mb: 1,\n            children: \"Allocation Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: allocationWithPercent.length > 0 ? allocationWithPercent.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                py: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: 700,\n                children: [item.percent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)]\n            }, item.label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            mt: 2,\n            children: [\"Risk Profile: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Moderate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 85\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = AssetAllocation;\nvar _c;\n$RefreshReg$(_c, \"AssetAllocation\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Grid","List","ListItem","ListItemText","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","AssetAllocation","data","_data$fetch_net_worth","_data$fetch_net_worth2","_data$fetch_net_worth3","_data$fetch_net_worth4","history","fetch_net_worth","allocation","netWorthResponse","assetValues","map","a","_a$value","label","netWorthAttribute","replace","value","parseFloat","units","total","reduce","sum","allocationWithPercent","percent","Math","round","sx","borderRadius","mb","children","display","justifyContent","alignItems","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","columns","mt","gridColumn","xs","md","width","height","dataKey","type","stroke","name","flexDirection","dense","length","item","py","primary","_c","$RefreshReg$"],"sources":["/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/AssetAllocation.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography, Box, Grid, List, ListItem, ListItemText } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nexport default function AssetAllocation({ data }) {\n  // Use real net worth history if available\n  const history = data.fetch_net_worth?.history || [];\n\n  // Use real allocation breakdown if available\n  const allocation = data.fetch_net_worth?.netWorthResponse?.assetValues?.map(a => ({\n    label: a.netWorthAttribute.replace('ASSET_TYPE_', '').replace('_', ' '),\n    value: parseFloat(a.value?.units) || 0\n  })) || [];\n\n  // Calculate total for percentage breakdown\n  const total = allocation.reduce((sum, a) => sum + a.value, 0) || 1;\n  const allocationWithPercent = allocation.map(a => ({ ...a, percent: Math.round((a.value / total) * 100) }));\n\n  return (\n    <Card sx={{ borderRadius: 3, mb: 3 }}>\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\" fontWeight={700}>Asset Allocation</Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">Last 12 months</Typography>\n        </Box>\n        <Grid container spacing={2} columns={12} mt={1}>\n          <Box sx={{ gridColumn: { xs: 'span 12', md: 'span 8' }, display: 'flex' }}>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <LineChart data={history}>\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#1976d2\" name=\"Total Portfolio\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </Box>\n          <Box sx={{ gridColumn: { xs: 'span 12', md: 'span 4' }, display: 'flex', flexDirection: 'column' }}>\n            <Typography variant=\"subtitle2\" mb={1}>Allocation Breakdown</Typography>\n            <List dense>\n              {allocationWithPercent.length > 0 ? allocationWithPercent.map((item) => (\n                <ListItem key={item.label} sx={{ py: 0 }}>\n                  <ListItemText primary={item.label} />\n                  <Typography fontWeight={700}>{item.percent}%</Typography>\n                </ListItem>\n              )) : <ListItem><ListItemText primary=\"No data\" /></ListItem>}\n            </List>\n            <Typography variant=\"body2\" color=\"text.secondary\" mt={2}>Risk Profile: <b>Moderate</b></Typography>\n          </Box>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}