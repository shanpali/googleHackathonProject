{"ast":null,"code":"var _jsxFileName = \"/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/Insights.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Grid, Box, Button, CircularProgress, Alert, IconButton, Tooltip, Chip } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport InfoIcon from '@mui/icons-material/Info';\nimport SavingsIcon from '@mui/icons-material/Savings';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingFlatIcon from '@mui/icons-material/TrendingFlat';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ICON_MAP = {\n  tax: /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {\n    color: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this),\n  portfolio: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n    color: \"warning\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 14\n  }, this),\n  spending: /*#__PURE__*/_jsxDEV(InfoIcon, {\n    color: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this),\n  opportunity: /*#__PURE__*/_jsxDEV(SavingsIcon, {\n    color: \"success\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 16\n  }, this),\n  alert: /*#__PURE__*/_jsxDEV(WarningAmberIcon, {\n    color: \"warning\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this)\n};\n\n// Sentiment analysis function for insights\nfunction analyzeInsightSentiment(title, description) {\n  const text = `${title} ${description}`.toLowerCase();\n\n  // Negative keywords for insights\n  const negativeKeywords = ['decline', 'fall', 'drop', 'loss', 'negative', 'bearish', 'crash', 'plunge', 'downturn', 'decrease', 'reduction', 'cut', 'slump', 'dip', 'slide', 'tumble', 'sink', 'plummet', 'bear market', 'recession', 'bankruptcy', 'default', 'delisting', 'penalty', 'fine', 'investigation', 'scandal', 'fraud', 'corruption', 'lawsuit', 'litigation', 'regulatory', 'warning', 'risk', 'volatile', 'uncertainty', 'concern', 'worry', 'fear', 'anxiety', 'drift', 'underperforming', 'deficit', 'shortfall', 'overspending', 'debt', 'liability'];\n\n  // Positive keywords for insights\n  const positiveKeywords = ['rise', 'gain', 'increase', 'growth', 'positive', 'bullish', 'rally', 'surge', 'jump', 'climb', 'soar', 'boost', 'improve', 'profit', 'earnings', 'revenue', 'dividend', 'bull market', 'expansion', 'recovery', 'upswing', 'uptrend', 'breakthrough', 'success', 'approval', 'launch', 'partnership', 'acquisition', 'merger', 'innovation', 'upgrade', 'optimistic', 'confidence', 'strong', 'robust', 'healthy', 'stable', 'opportunity', 'save', 'optimization', 'efficiency', 'benefit', 'advantage', 'potential'];\n  let negativeScore = 0;\n  let positiveScore = 0;\n  negativeKeywords.forEach(keyword => {\n    if (text.includes(keyword)) negativeScore++;\n  });\n  positiveKeywords.forEach(keyword => {\n    if (text.includes(keyword)) positiveScore++;\n  });\n\n  // Determine sentiment\n  if (negativeScore > positiveScore) return 'negative';\n  if (positiveScore > negativeScore) return 'positive';\n  return 'neutral';\n}\n\n// Get sentiment styling for insights\nfunction getInsightSentimentStyle(sentiment, priority) {\n  const baseStyle = {\n    borderRadius: 3,\n    mb: 2,\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      transform: 'translateY(-2px)',\n      boxShadow: 4\n    }\n  };\n  switch (sentiment) {\n    case 'positive':\n      return {\n        ...baseStyle,\n        borderLeft: '4px solid #4caf50',\n        background: 'linear-gradient(135deg, #f1f8e9 0%, #ffffff 100%)',\n        '&:hover': {\n          ...baseStyle['&:hover'],\n          boxShadow: '0 4px 12px rgba(76, 175, 80, 0.3)'\n        }\n      };\n    case 'negative':\n      return {\n        ...baseStyle,\n        borderLeft: '4px solid #f44336',\n        background: 'linear-gradient(135deg, #ffebee 0%, #ffffff 100%)',\n        '&:hover': {\n          ...baseStyle['&:hover'],\n          boxShadow: '0 4px 12px rgba(244, 67, 54, 0.3)'\n        }\n      };\n    default:\n      return {\n        ...baseStyle,\n        borderLeft: `4px solid ${priority !== null && priority !== void 0 && priority.toLowerCase().includes('high') ? '#f44336' : priority !== null && priority !== void 0 && priority.toLowerCase().includes('medium') ? '#ff9800' : priority !== null && priority !== void 0 && priority.toLowerCase().includes('opportunity') ? '#4caf50' : '#2196f3'}`,\n        background: 'linear-gradient(135deg, #f5f5f5 0%, #ffffff 100%)',\n        '&:hover': {\n          ...baseStyle['&:hover'],\n          boxShadow: '0 4px 12px rgba(158, 158, 158, 0.3)'\n        }\n      };\n  }\n}\n\n// Get sentiment icon for insights\nfunction getInsightSentimentIcon(sentiment) {\n  switch (sentiment) {\n    case 'positive':\n      return /*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n        sx: {\n          color: '#4caf50',\n          fontSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 14\n      }, this);\n    case 'negative':\n      return /*#__PURE__*/_jsxDEV(TrendingDownIcon, {\n        sx: {\n          color: '#f44336',\n          fontSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(TrendingFlatIcon, {\n        sx: {\n          color: '#9e9e9e',\n          fontSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n  }\n}\nconst fallbackInsights = [{\n  title: 'Tax Optimization Required',\n  priority: 'High Priority',\n  description: 'Invest ₹1,50,000 in ELSS by June 15th to save ₹45,000 in taxes this year. Our AI analysis shows you have sufficient funds in your HDFC savings account.',\n  action: 'Take Action',\n  icon: 'tax',\n  save: 'Save ₹45,000'\n}, {\n  title: 'Portfolio Drift Detected',\n  priority: 'Medium Priority',\n  description: 'Your portfolio has drifted from your target allocation. Consider rebalancing to optimize risk/return based on AI analysis. Equity exposure is 8% higher than your risk profile suggests.',\n  action: 'View Details',\n  icon: 'portfolio',\n  save: '+2.3% potential'\n}, {\n  title: 'Spending Pattern Analysis',\n  priority: 'Informational',\n  description: 'Your discretionary spending increased by 15% this month. The main categories with increases were dining out (+32%) and entertainment (+24%).',\n  action: 'See Budget Plan',\n  icon: 'spending',\n  save: ''\n}, {\n  title: 'Capital Gain Opportunity',\n  priority: 'Opportunity',\n  description: 'Offset your recent capital gains of ₹1,30,000 from Infosys shares by selling your underperforming SBI Mutual Fund units, potentially saving ₹32,500 in taxes.',\n  action: 'Explore Strategy',\n  icon: 'opportunity',\n  save: 'Save ₹32,500'\n}];\nexport default function Insights({\n  data,\n  customInsights\n}) {\n  _s();\n  const [insights, setInsights] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  useEffect(() => {\n    if (customInsights) {\n      // Add sentiment analysis to custom insights\n      const insightsWithSentiment = customInsights.map(insight => ({\n        ...insight,\n        sentiment: analyzeInsightSentiment(insight.title, insight.description)\n      }));\n      setInsights(insightsWithSentiment);\n      setLoading(false);\n      setError(null);\n      return;\n    }\n    let mounted = true;\n    setLoading(true);\n    setError(null);\n    axios.get('/insights', {\n      withCredentials: true\n    }).then(res => {\n      if (mounted && res.data && Array.isArray(res.data.insights)) {\n        // Add sentiment analysis to fetched insights\n        const insightsWithSentiment = res.data.insights.map(insight => ({\n          ...insight,\n          sentiment: analyzeInsightSentiment(insight.title, insight.description)\n        }));\n        setInsights(insightsWithSentiment);\n        setLastUpdated(res.data.last_updated);\n      } else if (mounted) {\n        // No insights found in database\n        setInsights([]);\n        setError('No insights available. Click refresh to generate personalized insights.');\n      }\n    }).catch(err => {\n      if (mounted) {\n        setInsights([]);\n        setError('Could not fetch insights. Click refresh to try again.');\n      }\n    }).finally(() => setLoading(false));\n    return () => {\n      mounted = false;\n    };\n    // eslint-disable-next-line\n  }, [customInsights]);\n\n  // Refresh handler\n  const handleRefresh = () => {\n    setRefreshing(true);\n    setError(null);\n    axios.get('/insights?refresh=true', {\n      withCredentials: true\n    }).then(res => {\n      if (res.data && Array.isArray(res.data.insights) && res.data.insights.length > 0) {\n        const insightsWithSentiment = res.data.insights.map(insight => ({\n          ...insight,\n          sentiment: analyzeInsightSentiment(insight.title, insight.description)\n        }));\n        setInsights(insightsWithSentiment);\n        setLastUpdated(res.data.last_updated);\n        setError(null);\n      } else {\n        setInsights([]);\n        setError('No insights generated. Please try again.');\n      }\n    }).catch(() => {\n      setInsights([]);\n      setError('Could not refresh insights. Please try again.');\n    }).finally(() => setRefreshing(false));\n  };\n\n  // Helper to check if insurance data is missing\n  const hasInsuranceData = !!(data && data.fetch_insurance && typeof data.fetch_insurance.totalCoverage === 'number' && data.fetch_insurance.totalCoverage > 0);\n  // Helper to check if any insight is about insurance\n  const hasInsuranceInsight = insights.some(insight => insight.title && insight.title.toLowerCase().includes('insurance'));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 1200,\n      mx: 'auto',\n      p: {\n        xs: 1,\n        md: 3\n      }\n    },\n    children: [!hasInsuranceData && hasInsuranceInsight && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), \" AI is providing generic insurance advice due to missing insurance data. Connect your insurance account for personalized insights.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: 700,\n        mr: 1,\n        children: \"Proactive Insights & Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), customInsights && /*#__PURE__*/_jsxDEV(Chip, {\n        label: \"Goal-based\",\n        color: \"secondary\",\n        size: \"small\",\n        sx: {\n          ml: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Refresh insights from Gemini AI\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleRefresh,\n            disabled: refreshing || loading || !!customInsights,\n            size: \"small\",\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), refreshing && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"primary\",\n        ml: 1,\n        children: \"Refreshing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 24\n      }, this), lastUpdated && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        ml: 1,\n        children: [\"Last updated: \", new Date(lastUpdated).toLocaleString('en-IN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 82\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }, this), !loading && !error && insights.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 2\n      },\n      children: \"No insights available. Click the refresh button above to generate personalized insights based on your financial data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: insights.map((item, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: getInsightSentimentStyle(item.sentiment, item.priority),\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1,\n                mb: 1\n              },\n              children: [getInsightSentimentIcon(item.sentiment), /*#__PURE__*/_jsxDEV(Chip, {\n                label: item.sentiment.charAt(0).toUpperCase() + item.sentiment.slice(1),\n                size: \"small\",\n                color: item.sentiment === 'positive' ? 'success' : item.sentiment === 'negative' ? 'error' : 'default',\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [ICON_MAP[item.icon] || /*#__PURE__*/_jsxDEV(InfoIcon, {\n                color: \"info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                fontWeight: 700,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                flexGrow: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), item.save && /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"success.main\",\n                fontWeight: 700,\n                children: item.save\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              mt: 1,\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              sx: {\n                mt: 2\n              },\n              children: item.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, item.title + idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(Insights, \"XTx/EyFkqZnQTWyDs25hpUkxFSY=\");\n_c = Insights;\nvar _c;\n$RefreshReg$(_c, \"Insights\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","Grid","Box","Button","CircularProgress","Alert","IconButton","Tooltip","Chip","RefreshIcon","ErrorOutlineIcon","TrendingUpIcon","InfoIcon","SavingsIcon","WarningAmberIcon","TrendingDownIcon","TrendingFlatIcon","axios","jsxDEV","_jsxDEV","ICON_MAP","tax","color","fileName","_jsxFileName","lineNumber","columnNumber","portfolio","spending","opportunity","alert","analyzeInsightSentiment","title","description","text","toLowerCase","negativeKeywords","positiveKeywords","negativeScore","positiveScore","forEach","keyword","includes","getInsightSentimentStyle","sentiment","priority","baseStyle","borderRadius","mb","transition","transform","boxShadow","borderLeft","background","getInsightSentimentIcon","sx","fontSize","fallbackInsights","action","icon","save","Insights","data","customInsights","_s","insights","setInsights","loading","setLoading","error","setError","refreshing","setRefreshing","lastUpdated","setLastUpdated","insightsWithSentiment","map","insight","mounted","get","withCredentials","then","res","Array","isArray","last_updated","catch","err","finally","handleRefresh","length","hasInsuranceData","fetch_insurance","totalCoverage","hasInsuranceInsight","some","width","maxWidth","mx","p","xs","md","children","severity","display","alignItems","variant","fontWeight","mr","label","size","ml","onClick","disabled","Date","toLocaleString","year","month","day","hour","minute","second","hour12","justifyContent","my","container","spacing","item","idx","sm","gap","charAt","toUpperCase","slice","flexGrow","mt","_c","$RefreshReg$"],"sources":["/Users/shantjai/Documents/GitHub/fi-mcp-dev-master/fi-mcp-project/react-frontend/src/components/Insights.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Typography, Grid, Box, Button, CircularProgress, Alert, IconButton, Tooltip, Chip } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport InfoIcon from '@mui/icons-material/Info';\nimport SavingsIcon from '@mui/icons-material/Savings';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport TrendingDownIcon from '@mui/icons-material/TrendingDown';\nimport TrendingFlatIcon from '@mui/icons-material/TrendingFlat';\nimport axios from 'axios';\n\nconst ICON_MAP = {\n  tax: <ErrorOutlineIcon color=\"error\" />,\n  portfolio: <TrendingUpIcon color=\"warning\" />,\n  spending: <InfoIcon color=\"info\" />,\n  opportunity: <SavingsIcon color=\"success\" />,\n  alert: <WarningAmberIcon color=\"warning\" />,\n};\n\n// Sentiment analysis function for insights\nfunction analyzeInsightSentiment(title, description) {\n  const text = `${title} ${description}`.toLowerCase();\n  \n  // Negative keywords for insights\n  const negativeKeywords = [\n    'decline', 'fall', 'drop', 'loss', 'negative', 'bearish', 'crash', 'plunge', 'downturn',\n    'decrease', 'reduction', 'cut', 'slump', 'dip', 'slide', 'tumble', 'sink', 'plummet',\n    'bear market', 'recession', 'bankruptcy', 'default', 'delisting', 'penalty', 'fine',\n    'investigation', 'scandal', 'fraud', 'corruption', 'lawsuit', 'litigation', 'regulatory',\n    'warning', 'risk', 'volatile', 'uncertainty', 'concern', 'worry', 'fear', 'anxiety',\n    'drift', 'underperforming', 'deficit', 'shortfall', 'overspending', 'debt', 'liability'\n  ];\n  \n  // Positive keywords for insights\n  const positiveKeywords = [\n    'rise', 'gain', 'increase', 'growth', 'positive', 'bullish', 'rally', 'surge', 'jump',\n    'climb', 'soar', 'boost', 'improve', 'profit', 'earnings', 'revenue', 'dividend',\n    'bull market', 'expansion', 'recovery', 'upswing', 'uptrend', 'breakthrough', 'success',\n    'approval', 'launch', 'partnership', 'acquisition', 'merger', 'innovation', 'upgrade',\n    'optimistic', 'confidence', 'strong', 'robust', 'healthy', 'stable', 'opportunity',\n    'save', 'optimization', 'efficiency', 'benefit', 'advantage', 'potential'\n  ];\n  \n  let negativeScore = 0;\n  let positiveScore = 0;\n  \n  negativeKeywords.forEach(keyword => {\n    if (text.includes(keyword)) negativeScore++;\n  });\n  \n  positiveKeywords.forEach(keyword => {\n    if (text.includes(keyword)) positiveScore++;\n  });\n  \n  // Determine sentiment\n  if (negativeScore > positiveScore) return 'negative';\n  if (positiveScore > negativeScore) return 'positive';\n  return 'neutral';\n}\n\n// Get sentiment styling for insights\nfunction getInsightSentimentStyle(sentiment, priority) {\n  const baseStyle = {\n    borderRadius: 3,\n    mb: 2,\n    transition: 'all 0.3s ease',\n    '&:hover': { transform: 'translateY(-2px)', boxShadow: 4 }\n  };\n  \n  switch (sentiment) {\n    case 'positive':\n      return {\n        ...baseStyle,\n        borderLeft: '4px solid #4caf50',\n        background: 'linear-gradient(135deg, #f1f8e9 0%, #ffffff 100%)',\n        '&:hover': { \n          ...baseStyle['&:hover'],\n          boxShadow: '0 4px 12px rgba(76, 175, 80, 0.3)' \n        }\n      };\n    case 'negative':\n      return {\n        ...baseStyle,\n        borderLeft: '4px solid #f44336',\n        background: 'linear-gradient(135deg, #ffebee 0%, #ffffff 100%)',\n        '&:hover': { \n          ...baseStyle['&:hover'],\n          boxShadow: '0 4px 12px rgba(244, 67, 54, 0.3)' \n        }\n      };\n    default:\n      return {\n        ...baseStyle,\n        borderLeft: `4px solid ${priority?.toLowerCase().includes('high') ? '#f44336' : priority?.toLowerCase().includes('medium') ? '#ff9800' : priority?.toLowerCase().includes('opportunity') ? '#4caf50' : '#2196f3'}`,\n        background: 'linear-gradient(135deg, #f5f5f5 0%, #ffffff 100%)',\n        '&:hover': { \n          ...baseStyle['&:hover'],\n          boxShadow: '0 4px 12px rgba(158, 158, 158, 0.3)' \n        }\n      };\n  }\n}\n\n// Get sentiment icon for insights\nfunction getInsightSentimentIcon(sentiment) {\n  switch (sentiment) {\n    case 'positive':\n      return <TrendingUpIcon sx={{ color: '#4caf50', fontSize: 20 }} />;\n    case 'negative':\n      return <TrendingDownIcon sx={{ color: '#f44336', fontSize: 20 }} />;\n    default:\n      return <TrendingFlatIcon sx={{ color: '#9e9e9e', fontSize: 20 }} />;\n  }\n}\n\nconst fallbackInsights = [\n  {\n    title: 'Tax Optimization Required',\n    priority: 'High Priority',\n    description: 'Invest ₹1,50,000 in ELSS by June 15th to save ₹45,000 in taxes this year. Our AI analysis shows you have sufficient funds in your HDFC savings account.',\n    action: 'Take Action',\n    icon: 'tax',\n    save: 'Save ₹45,000',\n  },\n  {\n    title: 'Portfolio Drift Detected',\n    priority: 'Medium Priority',\n    description: 'Your portfolio has drifted from your target allocation. Consider rebalancing to optimize risk/return based on AI analysis. Equity exposure is 8% higher than your risk profile suggests.',\n    action: 'View Details',\n    icon: 'portfolio',\n    save: '+2.3% potential',\n  },\n  {\n    title: 'Spending Pattern Analysis',\n    priority: 'Informational',\n    description: 'Your discretionary spending increased by 15% this month. The main categories with increases were dining out (+32%) and entertainment (+24%).',\n    action: 'See Budget Plan',\n    icon: 'spending',\n    save: '',\n  },\n  {\n    title: 'Capital Gain Opportunity',\n    priority: 'Opportunity',\n    description: 'Offset your recent capital gains of ₹1,30,000 from Infosys shares by selling your underperforming SBI Mutual Fund units, potentially saving ₹32,500 in taxes.',\n    action: 'Explore Strategy',\n    icon: 'opportunity',\n    save: 'Save ₹32,500',\n  },\n];\n\nexport default function Insights({ data, customInsights }) {\n  const [insights, setInsights] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  useEffect(() => {\n    if (customInsights) {\n      // Add sentiment analysis to custom insights\n      const insightsWithSentiment = customInsights.map(insight => ({\n        ...insight,\n        sentiment: analyzeInsightSentiment(insight.title, insight.description)\n      }));\n      setInsights(insightsWithSentiment);\n      setLoading(false);\n      setError(null);\n      return;\n    }\n    let mounted = true;\n    setLoading(true);\n    setError(null);\n    axios.get('/insights', { withCredentials: true })\n      .then(res => {\n        if (mounted && res.data && Array.isArray(res.data.insights)) {\n          // Add sentiment analysis to fetched insights\n          const insightsWithSentiment = res.data.insights.map(insight => ({\n            ...insight,\n            sentiment: analyzeInsightSentiment(insight.title, insight.description)\n          }));\n          setInsights(insightsWithSentiment);\n          setLastUpdated(res.data.last_updated);\n        } else if (mounted) {\n          // No insights found in database\n          setInsights([]);\n          setError('No insights available. Click refresh to generate personalized insights.');\n        }\n      })\n      .catch(err => {\n        if (mounted) {\n          setInsights([]);\n          setError('Could not fetch insights. Click refresh to try again.');\n        }\n      })\n      .finally(() => setLoading(false));\n    return () => { mounted = false; };\n    // eslint-disable-next-line\n  }, [customInsights]);\n\n  // Refresh handler\n  const handleRefresh = () => {\n    setRefreshing(true);\n    setError(null);\n    axios.get('/insights?refresh=true', { withCredentials: true })\n      .then(res => {\n        if (res.data && Array.isArray(res.data.insights) && res.data.insights.length > 0) {\n          const insightsWithSentiment = res.data.insights.map(insight => ({\n            ...insight,\n            sentiment: analyzeInsightSentiment(insight.title, insight.description)\n          }));\n          setInsights(insightsWithSentiment);\n          setLastUpdated(res.data.last_updated);\n          setError(null);\n        } else {\n          setInsights([]);\n          setError('No insights generated. Please try again.');\n        }\n      })\n      .catch(() => {\n        setInsights([]);\n        setError('Could not refresh insights. Please try again.');\n      })\n      .finally(() => setRefreshing(false));\n  };\n\n  // Helper to check if insurance data is missing\n  const hasInsuranceData = !!(data && data.fetch_insurance && typeof data.fetch_insurance.totalCoverage === 'number' && data.fetch_insurance.totalCoverage > 0);\n  // Helper to check if any insight is about insurance\n  const hasInsuranceInsight = insights.some(insight =>\n    insight.title && insight.title.toLowerCase().includes('insurance')\n  );\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: 1200, mx: 'auto', p: { xs: 1, md: 3 } }}>\n      {/* Highlight generic advice if insurance data is missing and insight is about insurance */}\n      {!hasInsuranceData && hasInsuranceInsight && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          <b>Note:</b> AI is providing generic insurance advice due to missing insurance data. Connect your insurance account for personalized insights.\n        </Alert>\n      )}\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\" fontWeight={700} mr={1}>Proactive Insights & Alerts</Typography>\n        {customInsights && <Chip label=\"Goal-based\" color=\"secondary\" size=\"small\" sx={{ ml: 1 }} />}\n        <Tooltip title=\"Refresh insights from Gemini AI\">\n          <span>\n            <IconButton onClick={handleRefresh} disabled={refreshing || loading || !!customInsights} size=\"small\" color=\"primary\">\n              <RefreshIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        {refreshing && <Typography variant=\"body2\" color=\"primary\" ml={1}>Refreshing...</Typography>}\n        {lastUpdated && (\n          <Typography variant=\"body2\" color=\"text.secondary\" ml={1}>\n            Last updated: {new Date(lastUpdated).toLocaleString('en-IN', { \n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n              hour: '2-digit',\n              minute: '2-digit',\n              second: '2-digit',\n              hour12: true\n            })}\n          </Typography>\n        )}\n      </Box>\n      {loading && <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}><CircularProgress /></Box>}\n      {error && <Alert severity=\"info\" sx={{ mb: 2 }}>{error}</Alert>}\n      {!loading && !error && insights.length === 0 && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          No insights available. Click the refresh button above to generate personalized insights based on your financial data.\n        </Alert>\n      )}\n      <Grid container spacing={2}>\n        {insights.map((item, idx) => (\n          <Grid item xs={12} sm={6} md={6} key={item.title + idx}>\n            <Card sx={getInsightSentimentStyle(item.sentiment, item.priority)}>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                  {getInsightSentimentIcon(item.sentiment)}\n                  <Chip \n                    label={item.sentiment.charAt(0).toUpperCase() + item.sentiment.slice(1)} \n                    size=\"small\" \n                    color={item.sentiment === 'positive' ? 'success' : item.sentiment === 'negative' ? 'error' : 'default'}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                  {ICON_MAP[item.icon] || <InfoIcon color=\"info\" />}\n                  <Typography variant=\"subtitle1\" fontWeight={700}>{item.title}</Typography>\n                  <Box flexGrow={1} />\n                  {item.save && <Typography color=\"success.main\" fontWeight={700}>{item.save}</Typography>}\n                </Box>\n                <Typography variant=\"body2\" color=\"text.secondary\" mt={1}>{item.description}</Typography>\n                <Button variant=\"outlined\" size=\"small\" sx={{ mt: 2 }}>{item.action}</Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}